basePath: /api/v1
definitions:
  internal_transport_http_image.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  internal_transport_http_image.ImageContourResponse:
    properties:
      contours:
        items:
          $ref: '#/definitions/thesis_back_internal_domain.Contour'
        type: array
    type: object
  internal_transport_http_image.ImageResponse:
    properties:
      fileName:
        type: string
      id:
        type: integer
      layers:
        items:
          $ref: '#/definitions/thesis_back_internal_transport_http_layer.LayerResponse'
        type: array
      name:
        type: string
      projectID:
        type: integer
      units:
        type: string
      url:
        type: string
      width:
        type: integer
    type: object
  internal_transport_http_image.UpdateImageDTO:
    properties:
      name:
        type: string
      units:
        type: string
      width:
        type: integer
    type: object
  internal_transport_http_layer.CreateLayerDTO:
    properties:
      imageID:
        type: integer
      name:
        type: string
    type: object
  internal_transport_http_layer.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  internal_transport_http_layer.LayerResponse:
    properties:
      id:
        type: integer
      imageID:
        type: integer
      measurements:
        additionalProperties: true
        type: object
      name:
        type: string
    type: object
  internal_transport_http_layer.UpdateLayerDTO:
    properties:
      measurements:
        additionalProperties: true
        type: object
      name:
        type: string
    type: object
  internal_transport_http_project.CreateProjectDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  internal_transport_http_project.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  internal_transport_http_project.ProjectResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/thesis_back_internal_transport_http_image.ImageResponse'
        type: array
      name:
        type: string
      updatedAt:
        type: string
    type: object
  internal_transport_http_project.UpdateProjectDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  internal_transport_http_user.AuthResponse:
    properties:
      accessToken:
        type: string
      expiresAt:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/internal_transport_http_user.UserResponse'
    type: object
  internal_transport_http_user.CreateUserDTO:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 8
        type: string
      patronymic:
        type: string
      username:
        type: string
    required:
    - firstName
    - lastName
    - password
    - username
    type: object
  internal_transport_http_user.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  internal_transport_http_user.LoginUserDTO:
    properties:
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  internal_transport_http_user.RefreshUserDTO:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  internal_transport_http_user.UserResponse:
    properties:
      createdAt:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      patronymic:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  thesis_back_internal_domain.Contour:
    properties:
      points:
        items:
          $ref: '#/definitions/thesis_back_internal_domain.Point'
        type: array
    type: object
  thesis_back_internal_domain.Point:
    properties:
      x:
        type: integer
      "y":
        type: integer
    type: object
  thesis_back_internal_transport_http_image.ImageResponse:
    properties:
      fileName:
        type: string
      id:
        type: integer
      layers:
        items:
          $ref: '#/definitions/thesis_back_internal_transport_http_layer.LayerResponse'
        type: array
      name:
        type: string
      projectID:
        type: integer
      units:
        type: string
      url:
        type: string
      width:
        type: integer
    type: object
  thesis_back_internal_transport_http_layer.LayerResponse:
    properties:
      id:
        type: integer
      imageID:
        type: integer
      measurements:
        additionalProperties: true
        type: object
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для дипломного проекта
  termsOfService: http://swagger.io/terms/
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для авторизации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_user.LoginUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_user.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_user.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_transport_http_user.ErrorResponse'
      summary: Аутентификация пользователя
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh Token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_user.RefreshUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_user.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_user.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_transport_http_user.ErrorResponse'
      summary: Обновить токены авторизации
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_user.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_transport_http_user.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_user.ErrorResponse'
      summary: Зарегистрировать новго пользователя
      tags:
      - Auth
  /image:
    post:
      consumes:
      - multipart/form-data
      description: Загрузка изображения в MinIO
      parameters:
      - description: ID проекта
        in: formData
        name: projectID
        required: true
        type: integer
      - description: Название изображения
        in: formData
        name: name
        required: true
        type: string
      - description: Файл изображения
        in: formData
        name: image
        required: true
        type: file
      - description: Ширина изображения
        in: formData
        name: width
        required: true
        type: integer
      - description: Единицы измерения
        in: formData
        name: units
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_image.ImageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_image.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Загрузка изображения
      tags:
      - Images
  /image/{id}:
    delete:
      parameters:
      - description: ID изображения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_image.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_transport_http_image.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удалить изображение
      tags:
      - Images
    put:
      parameters:
      - description: ID изображения
        in: path
        name: id
        required: true
        type: integer
      - description: Название картинки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_image.UpdateImageDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_image.ImageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_image.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновить название изображения
      tags:
      - Images
  /image/detect/{id}:
    get:
      parameters:
      - description: ID изображения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_image.ImageContourResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_image.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_transport_http_image.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Распознать объекты на изображении
      tags:
      - Images
  /layer:
    post:
      parameters:
      - description: Название слоя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_layer.CreateLayerDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_transport_http_layer.LayerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_layer.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создать новый слой
      tags:
      - Layers
  /layer/{id}:
    delete:
      parameters:
      - description: ID слоя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_layer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_transport_http_layer.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удалить слой
      tags:
      - Layers
    put:
      parameters:
      - description: ID слоя
        in: path
        name: id
        required: true
        type: integer
      - description: Название слоя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_layer.UpdateLayerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_layer.LayerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_layer.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновить слой
      tags:
      - Layers
  /project:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_project.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_project.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить все проекты
      tags:
      - Project
    post:
      parameters:
      - description: Название проекта
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_project.CreateProjectDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_transport_http_project.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_project.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создать новый проект
      tags:
      - Project
  /project/{id}:
    delete:
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_project.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_transport_http_project.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удалить проект
      tags:
      - Project
    get:
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_project.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_project.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить проект по ID
      tags:
      - Project
    put:
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      - description: Название проекта
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_project.UpdateProjectDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_project.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_transport_http_project.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновить проект
      tags:
      - Project
  /user/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_user.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_transport_http_user.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение информации о текущем пользователе
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
